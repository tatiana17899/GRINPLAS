@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<style>
    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1040;
        display: none;
    }

    .profile-slideout {
        position: fixed;
        top: 0;
        right: -300px;
        width: 300px;
        height: 100%;
        background: white;
        box-shadow: -3px 0 5px rgba(0, 0, 0, 0.2);
        padding: 20px;
        transition: right 0.4s ease-in-out;
        z-index: 1050;
        overflow-y: auto;
    }

    .profile-slideout.active {
        right: 0;
    }

    .profile-content {
        text-align: center;
    }

    .close-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 24px;
        border: none;
        background: none;
        cursor: pointer;
    }

    .profile-img {
        width: 120px;
        height: 120px;
        object-fit: cover;
        border-radius: 50%;
    }

    .avatar-container {
        position: relative;
        width: 120px;
        height: 120px;
        margin: 0 auto 20px;
    }

    .camera-btn {
        position: absolute;
        bottom: 0;
        right: 0;
        background-color: #28a745;
        color: white;
        border-radius: 50%;
        padding: 8px;
        cursor: pointer;
    }

    .input-wrapper {
        position: relative;
        width: 100%;
        margin-bottom: 10px;
    }

    .edit-icon {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #6c757d;
        cursor: pointer;
    }

    .profile-title {
        text-align: center;
        font-weight: bold;
        color: #888;
    }
    .profile-field:disabled, 
    .profile-field[readonly] {
        background-color: #f8f9fa;
        cursor: not-allowed;
    }

    .profile-field:not(:disabled):not([readonly]) {
        background-color: #fff;
        border-color: #28a745;
    }

    .modal-content {
        border-radius: 10px;
    }

    .modal-header {
        border-bottom: 1px solid #dee2e6;
    }

    .modal-footer {
        border-top: 1px solid #dee2e6;
    }
</style>

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @await Component.InvokeAsync("Profile")
    </li>
}
else
{
    <div class="d-flex gap-2">
        <a class="btn btn-outline-success" asp-area="Identity" asp-page="/Account/Login">Iniciar Sesión</a>
    </div>
}
</ul>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const profileTrigger = document.getElementById("profileTrigger");
        const profilePanel = document.getElementById("profilePanel");
        const closeProfile = document.getElementById("closeProfile");
        const overlay = document.getElementById("overlay");

        if (profileTrigger && profilePanel && closeProfile && overlay) {
            console.log("Elements found, setting up event listeners");
            
            // Abrir panel
            profileTrigger.addEventListener("click", function (event) {
                console.log("Profile trigger clicked");
                event.preventDefault();
                event.stopPropagation();
                profilePanel.classList.add("active");
                overlay.style.display = "block";
            });

            // Cerrar panel con botón
            closeProfile.addEventListener("click", function (event) {
                event.preventDefault();
                event.stopPropagation();
                profilePanel.classList.remove("active");
                overlay.style.display = "none";
            });

            // Cerrar panel haciendo clic fuera
            overlay.addEventListener("click", function (event) {
                event.preventDefault();
                profilePanel.classList.remove("active");
                overlay.style.display = "none";
            });

            // Cerrar panel con Escape
            document.addEventListener("keydown", function (event) {
                if (event.key === "Escape") {
                    profilePanel.classList.remove("active");
                    overlay.style.display = "none";
                }
            });
        } else {
            console.error("Some elements were not found:", {
                profileTrigger: !!profileTrigger,
                profilePanel: !!profilePanel,
                closeProfile: !!closeProfile,
                overlay: !!overlay
            });
        }

        // Función para cargar imagen
        window.loadFile = function(event) {
            const output = document.getElementById('profileImage');
            if (output && event.target.files[0]) {
                output.src = URL.createObjectURL(event.target.files[0]);
                output.onload = function() {
                    URL.revokeObjectURL(output.src);
                }
            }
        };
    });
</script>
