@using GRINPLAS.ViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    ViewData["Title"] = "Administrador";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var token = Xsrf.GetAndStoreTokens(Context).RequestToken;
}
<div class="d-flex flex-column">
      <div class="container p-6 m-2">
        <div class="d-flex align-items-center small">
          <a href="#" class="text-muted" style="text-decoration: none">
            Inicio
          </a>
          <span class="mx-2">/</span>
          <span class="fw-bold" style="color: #09c33d">Pedidos en línea</span>
        </div>
      </div>
      <div class="d-flex justify-content-between align-items-center mt-4">
        <h1 class="display-6 ps-5 fw-semibold fs-2">
          Historial de Pedidos en Línea
        </h1>
        <div
          class="bg-light p-3 d-flex align-items-center gap-4 me-5"
          style="border: #096623 2px solid; border-radius: 20px"
        >
          <i class="fas fa-money-bill-wave text-success"></i>
          <div class="d-flex align-items-center">
            <div class="text-center me-4">
              <p
                class="mb-0 fw-semibold"
                style="color: #096623; font-size: 15px"
              >
                Ganancia Total Bolsas
              </p>
              <p class="h4 fw-bold text-success mb-0">@ViewBag.TotalBolsas.ToString("C")</p>
            </div>
            <div
              class="border-start border-success mx-3"
              style="height: 50px"
            ></div>
            <div class="text-center ms-4">
              <p
                class="mb-0 0 fw-semibold"
                style="color: #096623; font-size: 15px"
              >
                Ganancia Total Mangas
              </p>
              <p class="h4 fw-bold text-success mb-0">@ViewBag.TotalMangas.ToString("C")</p>
            </div>
          </div>
        </div>
      </div>
      <div
        class="mt-4 d-flex justify-content-between align-items-center ms-5 me-5"
      >
        <div class="d-flex gap-3 text-muted">
          <button class="btn text-success fw-bold p-0" id="filter-all">
            Todos
          </button>
          <button class="btn text-muted p-0" id="filter-entregado">
            Entregado
          </button>
          <button class="btn text-muted p-0" id="filter-proceso">
            Proceso
          </button>
          <button class="btn text-muted p-0" id="filter-cancelado">
            Cancelado
          </button>
        </div>
        <div class="d-flex gap-2 mb-3">
          <div class="input-group border border-success rounded">
              <input type="date" id="fechaInicio" class="form-control border-0" />
          </div>
          <span class="text-muted">a</span>
          <div class="input-group border border-success rounded">
              <input type="date" id="fechaFin" class="form-control border-0" />
          </div>
          <button id="btnFiltrar" class="btn btn-success ms-2">Filtrar</button>
          <button id="btnResetear" class="btn btn-outline-secondary ms-2">Resetear</button>
        </div>
      </div>
      <hr class="mt-2 ms-5 me-5" />
      <div class="mt-4 table-responsive ms-5 me-5">
        <form method="post" asp-action="ActualizarPedido" class="pedido-form">
        <table id="ordersTable" class="table table-bordered">
          <thead class="table-light">
              <tr>
                  <th>Id</th>
                  <th>Cliente</th>
                  <th>Dirección</th>
                  <th>Boleta</th>
                  <th>Fecha Emisión</th>
                  <th>Fecha Entrega</th>
                  <th>Estado</th>
                  <th>Total</th>
              </tr>
          </thead>
          <tbody>
              @foreach (var pedido in Model.Pedidos){
                  <tr data-pedido-id="@pedido.PedidoId">
                       
                          <input type="hidden" name="pedidoId" value="@pedido.PedidoId" />
                          
                          <td>@pedido.PedidoId</td>
                          <td>@pedido.Cliente.NombreEmpresa</td>
                          <td>@pedido.Direccion</td>
                          <td>
                              <a href="@pedido.BoletaEmitida" target="_blank" class="btn btn-light border-0">
                                  <i class="fas fa-external-link-alt text-success"></i>
                              </a>
                          </td>
                          <td>
                              @pedido.FechaEmision.ToString("dd/MM/yyyy")
                          </td>
                          <td>
                            @pedido.FechaEntrega?.ToString("dd/MM/yyyy")
                          </td>
                          <td>
                            @pedido.Status
                          </td>
                          <td>@pedido.Total</td>
                    
                  </tr>
              }
              
          </tbody>
      </table>
      </form>
      </div>
    </div>
@section Scripts{
    <script src="~/js/administrador.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
     
$(document).ready(function () {
   
    var table = $('#ordersTable').DataTable({
        "pageLength": 4,           
        "lengthChange": false,     
        "language": {
            "paginate": {
                "previous": "Anterior",
                "next": "Siguiente"
            },
            "info": "Página _PAGE_ de _PAGES_",
            "infoEmpty": "No hay datos disponibles",
            "emptyTable": "No hay pedidos registrados",
            "search": "Buscar:"
        }
    });


    $('#filter-all').click(function() {
      
        table.column(6).search('proceso|entregado|cancelado', true, false).draw();
        actualizarBotonActivo(this);
    });

    $('#filter-entregado').click(function() {
        table.column(6).search('^entregado$', true, false).draw();
        actualizarBotonActivo(this);
    });

    $('#filter-proceso').click(function() {
        table.column(6).search('^proceso$', true, false).draw();
        actualizarBotonActivo(this);
    });

    $('#filter-cancelado').click(function() {
        table.column(6).search('^cancelado$', true, false).draw();
        actualizarBotonActivo(this);
    });

   
    function actualizarBotonActivo(botonActivo) {
       
        $('#filter-all, #filter-entregado, #filter-proceso, #filter-cancelado')
            .removeClass('text-success fw-bold')
            .addClass('text-muted');
        
       
        $(botonActivo).removeClass('text-muted').addClass('text-success fw-bold');
    }


    $('#btnFiltrar').click(function() {
        var fechaInicio = $('#fechaInicio').val();
        var fechaFin = $('#fechaFin').val();
        
        console.log('Fechas seleccionadas:', fechaInicio, 'a', fechaFin);
        
        if (fechaInicio && fechaFin) {
            filtrarPorFechas(fechaInicio, fechaFin);
        } else {
            Swal.fire({
                icon: 'warning',
                title: 'Fechas requeridas',
                text: 'Por favor selecciona ambas fechas para filtrar.'
            });
        }
    });

   
    $('#btnResetear').click(function() {
        $('#fechaInicio').val('');
        $('#fechaFin').val('');
        
        
        $.fn.dataTable.ext.search = $.fn.dataTable.ext.search.filter(function(fn) {
            return fn.name !== 'filtroFechas';
        });
        
        table.search('').columns().search('').draw();
        
 
        table.column(6).search('proceso|entregado|cancelado', true, false).draw();
        

        actualizarBotonActivo('#filter-all');
    });


    function filtrarPorFechas(inicio, fin) {

        var fechaInicio = new Date(inicio + 'T00:00:00');
        var fechaFin = new Date(fin + 'T23:59:59');
        
        console.log('Rango de filtro:');
        console.log('Desde:', fechaInicio);
        console.log('Hasta:', fechaFin);
        

        $.fn.dataTable.ext.search = $.fn.dataTable.ext.search.filter(function(fn) {
            return fn.name !== 'filtroFechas';
        });
        

        var filtroFechas = function(settings, data, dataIndex) {
            var fechaEmisionTexto = data[4]; 
            
            console.log('Procesando fila:', dataIndex, 'Fecha texto:', fechaEmisionTexto);
            
            if (!fechaEmisionTexto || fechaEmisionTexto.trim() === '') {
                console.log('Fecha vacía, excluir');
                return false;
            }
            
            try {

                var fechaLimpia = fechaEmisionTexto.trim();
                var partes = fechaLimpia.split('/');
                
                if (partes.length !== 3) {
                    console.log('Formato de fecha inválido:', fechaLimpia);
                    return false;
                }
                
                var dia = parseInt(partes[0]);
                var mes = parseInt(partes[1]) - 1; 
                var año = parseInt(partes[2]);
                
                if (isNaN(dia) || isNaN(mes) || isNaN(año)) {
                    console.log('Partes de fecha no numéricas:', dia, mes + 1, año);
                    return false;
                }
                
                var fechaTabla = new Date(año, mes, dia, 12, 0, 0, 0);
                
                console.log('Fecha convertida:', fechaTabla);
                console.log('¿Está en rango?', fechaTabla >= fechaInicio && fechaTabla <= fechaFin);
                
                return fechaTabla >= fechaInicio && fechaTabla <= fechaFin;
                
            } catch (error) {
                console.error('Error procesando fecha:', fechaEmisionTexto, error);
                return false;
            }
        };
        

        filtroFechas.name = 'filtroFechas';
        
        $.fn.dataTable.ext.search.push(filtroFechas);
        
        table.draw();
    }


    $('#filter-all').click();
});
    </script>
}
