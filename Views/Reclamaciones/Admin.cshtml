@using GRINPLAS.ViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    ViewData["Title"] = "Administrador";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var token = Xsrf.GetAndStoreTokens(Context).RequestToken;
}
<div class="d-flex flex-column">
    <div class="container p-6 m-2">
      <div class="d-flex align-items-center small">
        <a href="#" class="text-muted" style="text-decoration: none">
          Inicio
        </a>
        <span class="mx-2">/</span>
        <span class="fw-bold" style="color: #09c33d">Historial de reclamaciones</span>
      </div>
    </div>
    <div class="d-flex justify-content-between align-items-center mt-4">
      <h1 class="display-6 ps-5 fw-semibold fs-2">
        Historial de reclamaciones
      </h1>
    </div>
    <div class="mt-4 table-responsive ms-5 me-5">
      <table id="ordersTable" class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>Nombres</th>
                <th>Tel√©fono</th>
                <th>Email</th>
                <th>Detalle</th>
                <th>Responder</th>
                <th>Estado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var reclamo in Model.Reclamaciones)
            {
                <tr>
                    <td>@reclamo.Nombre</td>
                    <td>@reclamo.Telefono</td>
                    <td>@reclamo.Correo</td>
                    <td>@reclamo.Detalle</td>
                    <td class="text-center">
                        <button class="btn btn-link p-0" title="Responder"
                            onclick="responderReclamo(@reclamo.ReclamacionId, '@(reclamo.Respuesta ?? "")', @(reclamo.Estado.ToString().ToLower()))">
                            <i class="fas fa-envelope text-success"></i>
                        </button>
                    </td>
                    <td class="text-center">
                        <input class="form-check-input" type="checkbox"
                            @( (!string.IsNullOrEmpty(reclamo.Respuesta) || reclamo.Estado) ? "checked" : "" )
                            disabled>
                    </td>
                </tr>
            }

            @if (Model.Reclamaciones.Count == 0)
            {
                <tr>
                    <td colspan="6" class="text-center">No hay reclamos registrados en el sistema.</td>
                </tr>
            }
        </tbody>
      </table>
      <div class="d-flex justify-content-end mt-4">
          <nav aria-label="Page navigation">
              <ul class="pagination">
                  <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                      <a class="page-link" href="?page=@(Model.CurrentPage - 1)" tabindex="-1">Anterior</a>
                  </li>
                  @for (int i = 1; i <= Model.TotalPages; i++)
                  {
                      <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                          <a class="page-link" href="?page=@i">@i</a>
                      </li>
                  }
                  <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                      <a class="page-link" href="?page=@(Model.CurrentPage + 1)">Siguiente</a>
                  </li>
              </ul>
          </nav>
      </div>
    </div>
</div>